Математические операторы

Java предоставляет широкий набор операторов для работы с переменными. Значение, используемое по обе стороны от оператора, называется операндом.
Например, в приведенном ниже выражении числа 6 и 3 являются операндами оператора сложения:

int x = 6 + 3;
Основные арифметические операторы:

+	Сложение
-	Вычитание
*	Умножение
/	Деление
%	Остаток от деления
Использование арифметических операторов в Java  идентично их использованию в алгебраических выражениях.

Сложение

Оператор сложения + складывает вместе два значения, например, две константы, константу и переменную или переменную и переменную. Вот несколько примеров сложения:

int sum1 = 50 + 10; 
int sum2 = sum1 + 66; 
int sum3 = sum2 + sum2;
Вычитание

Аналогичным образом, оператор вычитания - вычитает один операнд из другого:

int sum1 = 1000 - 10;
int sum2 = sum1 - 5;
int sum3 = sum1 - sum2;

Умножение и деление

Умножение:

int num1 = 1000 * 2;
int num2 = num1 * 10;
int num3 = num1 * num2;
Деление:

int num1 = 1000 / 5;
int num2 = num1 / 2;
int num3 = num1 / num2;
Если умножение и деление производятся с данными целочисленного типа. то и результат будет целочисленным, а в случае работы с числами с плавающей точкой (float или double) - результат также будет числом с плавающей точкой. 

В том случае, если одно из чисел будет целочисленного типа, а второе - числом с плавающей точкой, то результат также будет числом с плавающей точкой. Это особенно важно в случае деления:

- если мы делим одно число типа int на другое, также типа int, то это будет целочисленное деление. К примеру, если разделить 15 на 4, результатом будет 3.

- если одно или оба числа имеют тип float или double, то результатом будет число с плавающей точкой:

15 / 4 = 3;
15.0 / 4 = 3.75;
15 / 4.0 = 3.75;
15.0 / 4.0 = 3.75;

15 / 3 = 5;
15.0 / 3 = 5.0;
15 / 3.0 = 5.0;

Остаток от деления

Математическая операция modulo выполняет целочисленное деление одного значения на другое и возвращает остаток от этого деления.
Оператор этой операции - символ процента ( % ).

int myVar = 37;
int res = myVar % 5; // res = 2
В примере мы делим 37 на 5. Остаток от этого деления составляет 2, это значение присваивается переменной res.

 

Сокращённая запись арифметических операторов

Для экономии времени предусмотрена сокращённая запись арифметических операторов.

x += y;    // То же самое, что и x = x + y;
x -= y;    // То же самое, что и x = x - y;
x *= y;    // То же самое, что и x = x * y;
x /= y;    // То же самое, что и x = x / y;
x %= y;    // То же самое, что и x = x % y;