Инкремент

Оператор, называемый инкрементом, представляет собой удобный и компактный способ увеличения значения переменной на единицу. Соответственно, оператор декремента уменьшает значение переменной на единицу. Инкремент записывается с помощью двух последовательных плюсов (++), а декремент - с помощью двух последовательных минусов (--).

Примеры:

int test = 5;
++test; // test == 6

int test = 5;
--test; // test == 4
Использовать эти операторы необходимо, чётко понимая механизм их работы.

Префикс и постфикс

Существуют две формы использования инкремента (декремента) - префиксная и постфиксная.
В префиксной форме оператор появляется перед операндом, в то время как в постфиксной форме оператор появляется после операнда. Давайте разберёмся, как работают эти две формы.
Префикс: инкремент увеличивает значение переменной и использует новое значение в выражении.

int x = 50;
int y = ++x; // x == 51, y == 51
В этом примере значение переменной х сначала увеличивается на единицу с помощью инкремента, а затем это (уже увеличенное) значение присваивается переменной y.

Постфикс: значение переменной сначала используется в выражении, а уже потом увеличивается на единицу. 

int x = 50;
int y = x++; // x == 51, y == 50
Точно так же работает и декремент.

Оператор присваивания

Мы уже использовали оператор присваивания (=), который присваивает переменной определённое значение.

int value = 5;
В Java, как и во многих других языках программирования, есть инструменты, помогающие сократить и упростить код. К примеру, оператор += присваивает переменной сразу увеличенное значение.

int x = 4;
x += 1; // x == 5

int x = 4;
x += 2; // x == 6

int x = 4;
int y = 5;
x += y; // x == 9
Точно так же работают и другие подобные операторы:

-=	Вычитание и присвоение
*=	Умножение и присвоение
/=	Деление и присвоение
%=	Остаток от деления и присвоение