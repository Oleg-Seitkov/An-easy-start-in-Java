Переменные

Переменные хранят данные для обработки.
Переменной присваивается имя (или идентификатор), например площадь, возраст, рост и т. п. Имя однозначно идентифицирует каждую переменную, присваивая ей значение или извлекая сохраненное значение, когда это нужно.

Переменные имеют типы. Некоторые примеры:


- int: для целых чисел, таких как 123 и -456. На самом деле, типов для целых чисел в Java несколько, но об этом поговорим позже.
- float  и double: для чисел с плавающей запятой или вещественных чисел, таких как 3.1416, -55.66. Эти типы данных имеют определённые различия, но в целом очень похожи. Мы будем использовать double. Во всех языках программирования целая часть отделяется от дробной точкой, а не запятой.
- String: для таких текстов, как "Привет" или "Доброе утро!". Текстовые строки заключаются в двойные кавычки. Мы уже имели дело с этим типом данных, когда выводили на печать приветствие "Hello, World!".

 

Перед тем, как использовать переменную, её необходимо объявить. Затем можно присвоить какое-нибудь значение.

String name;
name = "Ivan";
Можно объявить переменную определенного типа и сразу присвоить ей значение.

String name = "Ivan";
Здесь мы создали переменную, дали ей имя name, задали её тип - String и присвоили ей значение "Ivan". Если попытаться использовать переменную до того, как она объявлена, программа не скомпилируется (выдаст ошибку).

Важно отметить, что в Java переменная связана с типом и способна хранить только значения этого конкретного типа. Например, переменная int может хранить целочисленные значения, такие как 123; но она не может хранить действительные числа, такие как 12.34, или тексты, такие как "Привет".

Примеры объявления переменных

class MyClass {
    public static void main(String[] args) {
        String name = "Ivan";
        int age = 25;
        double score = 15.9;
        char group = 'Z';
    }
}
Тип переменной char используется для хранения одного символа. В отличие от строк, значение переменной типа char помещается в одинарные кавычки.

Кроме того, есть ещё один очень важный тип данных - логический (булевый), или boolean. Переменные этого типа могут принимать только два значения: true или false. 

boolean atHome = true;
Использование логических переменных необходимо для работы практически любой программы.

Рассмотрим пример. Пусть у нас есть две переменные:

int x1 = 100;
int x2 = 90;
Мы видим, что одна переменная больше другой, таким образом, выражение x1 > x2 является истинным, а x1 < x2 - ложным.

Результат сравнения можно записать в переменную.

int x1 = 100;
int x2 = 90;
boolean f1 = x1 > x2;
boolean f2 = x1 < x2;
В приведённом примере значение переменной f1 будет равно true, а значение переменной f2 - false.

 

Также иногда удобно объявлять несколько переменных одного и того же типа в одной строке через запятую:

int a = 42, b = 11;
Обе объявленные переменные будут иметь целочисленный тип.

 

Чтобы вывести значение переменной на печать, нужно передать её в метод println:

int x = 42;
String y = "Значение переменной x равно ";
int z = 58;
System.out.println(x);              // 42
System.out.println(x + z);          // 100
System.out.println("x = " + 42);    // x = 42
System.out.println(y + x);          // Значение переменной x равно 42
System.out.println(y + x + z);      // Значение переменной x равно 4258
System.out.println(y + (x + z));    // Значение переменной x равно 100
Внимательно рассмотрите пример. Если мы передаём два числа - метод println их складывает. Если же мы передаём строку и число, выражение автоматически приводится к строчному типу. В то же время, соблюдается обычная очерёдность операций - вначале производятся операции, заключённые в скобки.

Часто бывает нужно вывести значение нескольких переменных в одну строку. Для этого воспользуемся тем же способом и приведём все данные в строковый формат.

int x = 42;
int y = 84;
System.out.println(x + " " + y);    // 42 84